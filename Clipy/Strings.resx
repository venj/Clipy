<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="__menu_title_Delete_Histories" xml:space="preserve">
    <value>Delete Histories</value>
    <comment>Delete Histories menu title</comment>
  </data>
  <data name="__menu_title_Exit" xml:space="preserve">
    <value>Exit</value>
    <comment>Exit menu title</comment>
  </data>
  <data name="__menu_title_Settings" xml:space="preserve">
    <value>Settings</value>
    <comment>Settings menu title</comment>
  </data>
  <data name="__menu_title_Snippets" xml:space="preserve">
    <value>Snippets</value>
    <comment>Snippet menu title</comment>
  </data>
  <data name="__message_box_Group_name_not_empty" xml:space="preserve">
    <value>Group name can not be empty!</value>
    <comment>Group name can not be empty</comment>
  </data>
  <data name="__message_box_message_add_snippet" xml:space="preserve">
    <value>Add snippet</value>
    <comment>add snippet message</comment>
  </data>
  <data name="__message_box_message_copied" xml:space="preserve">
    <value>Copied!</value>
    <comment>message box message copied</comment>
  </data>
  <data name="__message_box_message_delete_group_part_1" xml:space="preserve">
    <value>All the snippets in "</value>
    <comment>delete group message part 2</comment>
  </data>
  <data name="__message_box_message_delete_group_part_2" xml:space="preserve">
    <value>" group will be deleted.
Are you sure?</value>
    <comment>delete group message part 2</comment>
  </data>
  <data name="__message_box_message_delete_snippets" xml:space="preserve">
    <value>Selected snippet(s) will be deleted.
Are you sure?</value>
    <comment>delete snippets message</comment>
  </data>
  <data name="__message_box_message_edit_snippet" xml:space="preserve">
    <value>Edit snippet</value>
    <comment>edit snippet message</comment>
  </data>
  <data name="__message_box_message_group_cannot_empty" xml:space="preserve">
    <value>Group can not be empty.</value>
    <comment>group cannot empty message</comment>
  </data>
  <data name="__message_box_message_Remane_group" xml:space="preserve">
    <value>Rename group</value>
    <comment>rename group message</comment>
  </data>
  <data name="__message_box_message_Reset_all" xml:space="preserve">
    <value>Reset all settings to default values?</value>
    <comment>reset all message box message</comment>
  </data>
  <data name="__message_box_message_saved" xml:space="preserve">
    <value>Saved!</value>
    <comment>message box saved</comment>
  </data>
  <data name="__message_box_message_save_errors" xml:space="preserve">
    <value>Error saving settings.</value>
    <comment>message box save error</comment>
  </data>
  <data name="__message_box_message_snippet_cannot_empty" xml:space="preserve">
    <value>Snippet can not be empty.</value>
    <comment>snippet cannot empty message</comment>
  </data>
  <data name="__message_box_title_delete_group_part_1" xml:space="preserve">
    <value>Delete </value>
    <comment>delete and a space</comment>
  </data>
  <data name="__message_box_title_delete_snippets" xml:space="preserve">
    <value>Delete snippets</value>
    <comment>delete snippets title</comment>
  </data>
  <data name="__message_box_title_Remane" xml:space="preserve">
    <value>Rename</value>
    <comment>rename title</comment>
  </data>
  <data name="__message_box_title_Reset_all" xml:space="preserve">
    <value>Reset to default</value>
    <comment>reset all message box title</comment>
  </data>
  <data name="__message_box_Warn_Delete_Histories" xml:space="preserve">
    <value>All clipboard histories will be deleted!!!
Note: Snippets will not be affected.

Are you sure?</value>
    <comment>Message box warn delete histories</comment>
  </data>
  <data name="__window_content_multiple_snippests_selected" xml:space="preserve">
    <value>(multiple snippets selected.)</value>
    <comment>multiple snippets selected</comment>
  </data>
  <data name="__window_content_No_Name" xml:space="preserve">
    <value>(No Name)</value>
    <comment>No name create snippet</comment>
  </data>
</root>